# Exit if not running interactively
[ -z "$PS1" ] && return

# Disable Oh My Zsh automatic updates and skip compfix check for speed
export DISABLE_AUTO_UPDATE=true
export ZSH_DISABLE_COMPFIX=true

# Set PATH
export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH"

# Path to your Oh My Zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Theme
ZSH_THEME="spaceship"

# Example: Disable certain spaceship segments (uncomment and adjust if needed)
# export SPACESHIP_PROMPT_ORDER=(time user dir host)
# export SPACESHIP_GIT_SHOW=false
# export SPACESHIP_DIR_TRUNC=1

# Configure oh-my-zsh plugins
zstyle :omz:plugins:ssh-agent identities id_ed25519
zstyle :omz:plugins:ssh-agent lifetime 1h

plugins=(
	fzf
	git
	ssh-agent
	tmux
	zsh-autosuggestions
	zsh-syntax-highlighting
)

# Load Oh My Zsh
source "$ZSH/oh-my-zsh.sh"

# Enable vi mode keybindings
bindkey -v

# OCaml/opam configuration
# This loads opam configuration and environment variables
[[ ! -r "$HOME/.opam/opam-init/init.zsh" ]] || source "$HOME/.opam/opam-init/init.zsh" > /dev/null 2> /dev/null

# Lazy load NVM for faster shell startup
NVM_DIR="$HOME/.nvm"
if [ -s "$NVM_DIR/nvm.sh" ]; then
	export NVM_DIR="$HOME/.nvm"
	
	# Create a function to load NVM only once
	load_nvm() {
		# Remove this function and all placeholder functions
		unset -f load_nvm nvm node npm npx yarn pnpm
		
		# Load NVM
		source "$NVM_DIR/nvm.sh"
		
		# Load bash completion if available
		[ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
		
		# Return true so commands can be executed
		return 0
	}
	
	# Create placeholder functions for all Node-related commands
	for cmd in nvm node npm npx yarn pnpm; do
		# Create a function for each command
		eval "$cmd() { 
			# Load NVM first time any command is used
			load_nvm
			# Then execute the original command by using command to bypass the function
			command $cmd \"\$@\"
		}"
	done
fi

# Load additional shell configurations from your config directory.
for conf in "$HOME/.config/shell/"*.sh; do
	[ -f "$conf" ] && . "$conf"
done

# Auto-start tmux (placed at the end to ensure all environment is set up first)
if [[ -z "$TMUX" ]] && [[ ! -n "$SSH_TTY" ]] && [[ "$TERM_PROGRAM" != "vscode" ]]; then
    # Allow bypassing tmux by setting NOTMUX=1
    if [[ -z "$NOTMUX" ]]; then
        # Attempt to attach to existing session or create a new one
        exec tmux new-session -A
    fi
fi