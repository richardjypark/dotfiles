#!/bin/sh
set -e

# Setup Node.js via NVM
echo "Setting up Node.js via NVM..."
NVM_DIR="$HOME/.nvm"

# Use chezmoi template syntax with proper spacing
{{- with .nvm }}
NVM_VERSION="{{ .version }}"
NODE_VERSION="{{ .nodeVersion }}"
{{- end }}

# Verify that chezmoi has properly cloned the repository
if [ ! -d "$NVM_DIR" ] || [ ! -f "$NVM_DIR/nvm.sh" ]; then
    echo "Error: NVM repository not properly initialized at $NVM_DIR"
    echo "This might indicate that chezmoi external file setup hasn't completed yet."
    echo "Try running 'chezmoi apply --refresh-externals' first."
    exit 1
fi

# Load NVM
. "$NVM_DIR/nvm.sh"

# Check if the correct Node version is already installed and set as default
CURRENT_NODE_VERSION=$(nvm current 2>/dev/null || echo "none")
if [ "$CURRENT_NODE_VERSION" != "$NODE_VERSION" ]; then
    echo "Installing Node.js $NODE_VERSION..."
    nvm install "$NODE_VERSION"
    nvm alias default "$NODE_VERSION"
else
    echo "Node.js $NODE_VERSION is already installed and set as default"
fi

# Use the default version
nvm use default >/dev/null

# Verify node is available
if ! command -v node >/dev/null 2>&1; then
    echo "Error: Node.js installation failed"
    exit 1
fi

# Function to check if global package needs to be installed/updated
needs_package_update() {
    local package=$1
    local current_version
    if ! command -v "$package" >/dev/null 2>&1; then
        return 0 # Package not installed
    fi
    return 1
}

# Install global packages only if needed
echo "Checking global npm packages..."
# npm is installed with Node, only check for yarn and pnpm
for package in yarn pnpm; do
    if needs_package_update "$package"; then
        echo "Installing/updating $package..."
        # Use the npm managed by nvm
        npm install -g "$package@latest" >/dev/null 2>&1
    else
        echo "$package is already installed"
    fi
done

echo "Node.js setup complete!"
